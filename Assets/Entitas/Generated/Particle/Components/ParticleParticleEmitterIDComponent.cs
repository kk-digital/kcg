//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ParticleEntity {

    public Particle.EmitterIDComponent particleEmitterID { get { return (Particle.EmitterIDComponent)GetComponent(ParticleComponentsLookup.ParticleEmitterID); } }
    public bool hasParticleEmitterID { get { return HasComponent(ParticleComponentsLookup.ParticleEmitterID); } }

    public void AddParticleEmitterID(int newParticleEmitterId) {
        var index = ParticleComponentsLookup.ParticleEmitterID;
        var component = (Particle.EmitterIDComponent)CreateComponent(index, typeof(Particle.EmitterIDComponent));
        component.ParticleEmitterId = newParticleEmitterId;
        AddComponent(index, component);
    }

    public void ReplaceParticleEmitterID(int newParticleEmitterId) {
        var index = ParticleComponentsLookup.ParticleEmitterID;
        var component = (Particle.EmitterIDComponent)CreateComponent(index, typeof(Particle.EmitterIDComponent));
        component.ParticleEmitterId = newParticleEmitterId;
        ReplaceComponent(index, component);
    }

    public void RemoveParticleEmitterID() {
        RemoveComponent(ParticleComponentsLookup.ParticleEmitterID);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ParticleMatcher {

    static Entitas.IMatcher<ParticleEntity> _matcherParticleEmitterID;

    public static Entitas.IMatcher<ParticleEntity> ParticleEmitterID {
        get {
            if (_matcherParticleEmitterID == null) {
                var matcher = (Entitas.Matcher<ParticleEntity>)Entitas.Matcher<ParticleEntity>.AllOf(ParticleComponentsLookup.ParticleEmitterID);
                matcher.componentNames = ParticleComponentsLookup.componentNames;
                _matcherParticleEmitterID = matcher;
            }

            return _matcherParticleEmitterID;
        }
    }
}
