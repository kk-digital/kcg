//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AgentEntity {

    static readonly Agent.PlayerComponent agentPlayerComponent = new Agent.PlayerComponent();

    public bool isAgentPlayer {
        get { return HasComponent(AgentComponentsLookup.AgentPlayer); }
        set {
            if (value != isAgentPlayer) {
                var index = AgentComponentsLookup.AgentPlayer;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : agentPlayerComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AgentMatcher {

    static Entitas.IMatcher<AgentEntity> _matcherAgentPlayer;

    public static Entitas.IMatcher<AgentEntity> AgentPlayer {
        get {
            if (_matcherAgentPlayer == null) {
                var matcher = (Entitas.Matcher<AgentEntity>)Entitas.Matcher<AgentEntity>.AllOf(AgentComponentsLookup.AgentPlayer);
                matcher.componentNames = AgentComponentsLookup.componentNames;
                _matcherAgentPlayer = matcher;
            }

            return _matcherAgentPlayer;
        }
    }
}
