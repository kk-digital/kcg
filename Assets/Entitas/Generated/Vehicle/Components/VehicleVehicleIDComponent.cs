//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class VehicleEntity {

    public Vehicle.IDComponent vehicleID { get { return (Vehicle.IDComponent)GetComponent(VehicleComponentsLookup.VehicleID); } }
    public bool hasVehicleID { get { return HasComponent(VehicleComponentsLookup.VehicleID); } }

    public void AddVehicleID(int newID) {
        var index = VehicleComponentsLookup.VehicleID;
        var component = (Vehicle.IDComponent)CreateComponent(index, typeof(Vehicle.IDComponent));
        component.ID = newID;
        AddComponent(index, component);
    }

    public void ReplaceVehicleID(int newID) {
        var index = VehicleComponentsLookup.VehicleID;
        var component = (Vehicle.IDComponent)CreateComponent(index, typeof(Vehicle.IDComponent));
        component.ID = newID;
        ReplaceComponent(index, component);
    }

    public void RemoveVehicleID() {
        RemoveComponent(VehicleComponentsLookup.VehicleID);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class VehicleMatcher {

    static Entitas.IMatcher<VehicleEntity> _matcherVehicleID;

    public static Entitas.IMatcher<VehicleEntity> VehicleID {
        get {
            if (_matcherVehicleID == null) {
                var matcher = (Entitas.Matcher<VehicleEntity>)Entitas.Matcher<VehicleEntity>.AllOf(VehicleComponentsLookup.VehicleID);
                matcher.componentNames = VehicleComponentsLookup.componentNames;
                _matcherVehicleID = matcher;
            }

            return _matcherVehicleID;
        }
    }
}
