//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TileMap.Data tileMapData { get { return (TileMap.Data)GetComponent(GameComponentsLookup.TileMapData); } }
    public bool hasTileMapData { get { return HasComponent(GameComponentsLookup.TileMapData); } }

    public void AddTileMapData(TileMap.ChunkList newChunks, TileMap.Top newTop, UnityEngine.Texture2D[] newLayerTextures) {
        var index = GameComponentsLookup.TileMapData;
        var component = (TileMap.Data)CreateComponent(index, typeof(TileMap.Data));
        component.Chunks = newChunks;
        component.Top = newTop;
        component.LayerTextures = newLayerTextures;
        AddComponent(index, component);
    }

    public void ReplaceTileMapData(TileMap.ChunkList newChunks, TileMap.Top newTop, UnityEngine.Texture2D[] newLayerTextures) {
        var index = GameComponentsLookup.TileMapData;
        var component = (TileMap.Data)CreateComponent(index, typeof(TileMap.Data));
        component.Chunks = newChunks;
        component.Top = newTop;
        component.LayerTextures = newLayerTextures;
        ReplaceComponent(index, component);
    }

    public void RemoveTileMapData() {
        RemoveComponent(GameComponentsLookup.TileMapData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTileMapData;

    public static Entitas.IMatcher<GameEntity> TileMapData {
        get {
            if (_matcherTileMapData == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TileMapData);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTileMapData = matcher;
            }

            return _matcherTileMapData;
        }
    }
}
