//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Projectile.PhysicsState2DComponent projectilePhysicsState2D { get { return (Projectile.PhysicsState2DComponent)GetComponent(GameComponentsLookup.ProjectilePhysicsState2D); } }
    public bool hasProjectilePhysicsState2D { get { return HasComponent(GameComponentsLookup.ProjectilePhysicsState2D); } }

    public void AddProjectilePhysicsState2D(KMath.Vec2f newAngularVelocity, float newAngularMass, float newAngularAcceleration, float newCenterOfGravity, KMath.Vec2f newCenterOfRotation) {
        var index = GameComponentsLookup.ProjectilePhysicsState2D;
        var component = (Projectile.PhysicsState2DComponent)CreateComponent(index, typeof(Projectile.PhysicsState2DComponent));
        component.angularVelocity = newAngularVelocity;
        component.angularMass = newAngularMass;
        component.angularAcceleration = newAngularAcceleration;
        component.centerOfGravity = newCenterOfGravity;
        component.centerOfRotation = newCenterOfRotation;
        AddComponent(index, component);
    }

    public void ReplaceProjectilePhysicsState2D(KMath.Vec2f newAngularVelocity, float newAngularMass, float newAngularAcceleration, float newCenterOfGravity, KMath.Vec2f newCenterOfRotation) {
        var index = GameComponentsLookup.ProjectilePhysicsState2D;
        var component = (Projectile.PhysicsState2DComponent)CreateComponent(index, typeof(Projectile.PhysicsState2DComponent));
        component.angularVelocity = newAngularVelocity;
        component.angularMass = newAngularMass;
        component.angularAcceleration = newAngularAcceleration;
        component.centerOfGravity = newCenterOfGravity;
        component.centerOfRotation = newCenterOfRotation;
        ReplaceComponent(index, component);
    }

    public void RemoveProjectilePhysicsState2D() {
        RemoveComponent(GameComponentsLookup.ProjectilePhysicsState2D);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherProjectilePhysicsState2D;

    public static Entitas.IMatcher<GameEntity> ProjectilePhysicsState2D {
        get {
            if (_matcherProjectilePhysicsState2D == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ProjectilePhysicsState2D);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherProjectilePhysicsState2D = matcher;
            }

            return _matcherProjectilePhysicsState2D;
        }
    }
}
