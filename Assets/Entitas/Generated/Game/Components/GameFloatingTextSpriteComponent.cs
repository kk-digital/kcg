//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FloatingText.SpriteComponent floatingTextSprite { get { return (FloatingText.SpriteComponent)GetComponent(GameComponentsLookup.FloatingTextSprite); } }
    public bool hasFloatingTextSprite { get { return HasComponent(GameComponentsLookup.FloatingTextSprite); } }

    public void AddFloatingTextSprite(UnityEngine.GameObject newGameObject) {
        var index = GameComponentsLookup.FloatingTextSprite;
        var component = (FloatingText.SpriteComponent)CreateComponent(index, typeof(FloatingText.SpriteComponent));
        component.GameObject = newGameObject;
        AddComponent(index, component);
    }

    public void ReplaceFloatingTextSprite(UnityEngine.GameObject newGameObject) {
        var index = GameComponentsLookup.FloatingTextSprite;
        var component = (FloatingText.SpriteComponent)CreateComponent(index, typeof(FloatingText.SpriteComponent));
        component.GameObject = newGameObject;
        ReplaceComponent(index, component);
    }

    public void RemoveFloatingTextSprite() {
        RemoveComponent(GameComponentsLookup.FloatingTextSprite);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFloatingTextSprite;

    public static Entitas.IMatcher<GameEntity> FloatingTextSprite {
        get {
            if (_matcherFloatingTextSprite == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FloatingTextSprite);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFloatingTextSprite = matcher;
            }

            return _matcherFloatingTextSprite;
        }
    }
}
